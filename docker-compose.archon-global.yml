version: '3.8'

services:
  # Archon Server - Main backend service (FastAPI + Socket.IO + Crawling)
  archon-global-server:
    build:
      context: ./archon/python
      dockerfile: Dockerfile.server
      args:
        BUILDKIT_INLINE_CACHE: 1
        ARCHON_SERVER_PORT: 8181
    container_name: archon-global-server
    ports:
      - "127.0.0.1:4001:8181"
    environment:
      - SUPABASE_URL=${GLOBAL_ARCHON_SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${GLOBAL_ARCHON_SUPABASE_KEY}
      - OPENAI_API_KEY=${GLOBAL_ARCHON_OPENAI_KEY:-}
      - LOGFIRE_TOKEN=${GLOBAL_ARCHON_LOGFIRE_TOKEN:-}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - LOG_LEVEL=${GLOBAL_ARCHON_LOG_LEVEL:-INFO}
      - ARCHON_SERVER_PORT=8181
      - ARCHON_MCP_PORT=8051
      - ARCHON_AGENTS_PORT=8052
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Docker socket for MCP container control
      - archon-global-data:/app/data
      - archon-global-logs:/app/logs
      # Mount source code for hot reload in development
      - ./archon/python/src:/app/src
      - ./archon/python/tests:/app/tests
    networks:
      - archon-global
    restart: unless-stopped
    command: ["python", "-m", "uvicorn", "src.server.main:socket_app", "--host", "0.0.0.0", "--port", "8181", "--reload"]
    healthcheck:
      test: ["CMD", "sh", "-c", "python -c \"import urllib.request; urllib.request.urlopen('http://localhost:8181/health')\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Archon MCP - Lightweight MCP Server Service (HTTP-based)
  archon-global-mcp:
    build:
      context: ./archon/python
      dockerfile: Dockerfile.mcp
      args:
        BUILDKIT_INLINE_CACHE: 1
        ARCHON_MCP_PORT: 8051
    container_name: archon-global-mcp
    ports:
      - "127.0.0.1:4002:8051"
    environment:
      - SUPABASE_URL=${GLOBAL_ARCHON_SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${GLOBAL_ARCHON_SUPABASE_KEY}
      - LOGFIRE_TOKEN=${GLOBAL_ARCHON_LOGFIRE_TOKEN:-}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - TRANSPORT=sse
      - LOG_LEVEL=${GLOBAL_ARCHON_LOG_LEVEL:-INFO}
      # MCP needs to know where to find other services
      - API_SERVICE_URL=http://archon-global-server:8181
      - AGENTS_SERVICE_URL=http://archon-global-agents:8052
      - ARCHON_MCP_PORT=8051
      - ARCHON_SERVER_PORT=8181
      - ARCHON_AGENTS_PORT=8052
    networks:
      - archon-global
    depends_on:
      - archon-global-server
      - archon-global-agents
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "python -c \"import socket; s=socket.socket(); s.connect(('localhost', 8051)); s.close()\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s  # Give dependencies time to start

  # Archon Agents - AI Agents Service (ML/Reranking)
  archon-global-agents:
    build:
      context: ./archon/python
      dockerfile: Dockerfile.agents
      args:
        BUILDKIT_INLINE_CACHE: 1
        ARCHON_AGENTS_PORT: 8052
    container_name: archon-global-agents
    ports:
      - "127.0.0.1:4003:8052"
    environment:
      - SUPABASE_URL=${GLOBAL_ARCHON_SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${GLOBAL_ARCHON_SUPABASE_KEY}
      - OPENAI_API_KEY=${GLOBAL_ARCHON_OPENAI_KEY:-}
      - LOGFIRE_TOKEN=${GLOBAL_ARCHON_LOGFIRE_TOKEN:-}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - LOG_LEVEL=${GLOBAL_ARCHON_LOG_LEVEL:-INFO}
      - ARCHON_AGENTS_PORT=8052
    networks:
      - archon-global
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "python -c \"import urllib.request; urllib.request.urlopen('http://localhost:8052/health')\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Archon UI - React frontend
  archon-global-ui:
    build: ./archon/archon-ui-main
    container_name: archon-global-ui
    ports:
      - "127.0.0.1:4000:5173"
    environment:
      - VITE_API_URL=http://localhost:4001
      - ARCHON_SERVER_PORT=8181
      - HOST=localhost
    volumes:
      # Mount source code for hot reload in development
      - ./archon/archon-ui-main/src:/app/src
      - ./archon/archon-ui-main/public:/app/public
    networks:
      - archon-global
    depends_on:
      - archon-global-server
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  archon-global-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/.devlauncher/archon/global/data
  
  archon-global-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/.devlauncher/archon/global/logs

networks:
  archon-global:
    driver: bridge
    name: archon-global-network
    ipam:
      driver: default
      config:
        - subnet: 172.40.0.0/24